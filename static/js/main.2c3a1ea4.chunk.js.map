{"version":3,"sources":["firebase.js","header.js","footer.js","doughnut.js","line.js","pie.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","Header","react_default","a","createElement","class","role","aria-label","href","aria-expanded","data-target","aria-hidden","id","React","Component","Footer","style","padding","width","getRandomInt","min","max","Math","floor","random","getState","labels","datasets","data","backgroundColor","hoverBackgroundColor","LineGraph","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","speed","gps","_this2","database","ref","on","snapshot","speedObj","val","speedArr","speeds","push","setState","gpsObj","gpsArr","paddingTop","header","line","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c3a1ea4.chunk.js","sourcesContent":[" import firebase from 'firebase';\r\n \r\n // Set the configuration for your app\r\n// TODO: Replace with your project's config object\r\n\r\n  var config = {\r\n    apiKey: \"AIzaSyAnFTWZTgWEugKOSUM6WY_NkxrPzRzn6dU\",\r\n    authDomain: \"bruin-racing.firebaseapp.com\",\r\n    databaseURL: \"https://bruin-racing.firebaseio.com\",\r\n    projectId: \"bruin-racing\",\r\n    storageBucket: \"bucket.appspot.com\"\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n  \r\n  export default firebase;","import React from 'react';\r\n\r\nclass Header extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n            <nav class=\"navbar is-fixed-top is-primary\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <div class=\"navbar-brand\">\r\n              <a class=\"navbar-item\" href=\"https://www.bruinracing.com/smv/\">\r\n                <h1>Bruin Racing</h1>\r\n              </a>\r\n          \r\n              <a role=\"button\" class=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n                <span aria-hidden=\"true\"></span>\r\n              </a>\r\n            </div>\r\n          \r\n            <div id=\"navbarBasicExample\" class=\"navbar-menu\">\r\n              <div class=\"navbar-start\">\r\n                <a class=\"navbar-item\">\r\n                  Home\r\n                </a>\r\n                <a class=\"navbar-item\">\r\n                  Graphs\r\n                </a>\r\n                </div>\r\n              </div>\r\n          \r\n              <div class=\"navbar-end\">\r\n                <div class=\"navbar-item\">\r\n                  Made by A. Nagarajan\r\n                </div>\r\n              </div>\r\n            </nav>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass Footer extends React.Component{\r\n\r\n    render() {\r\n        return (\r\n        <nav class=\"navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\r\n            <div style={{padding: 50, width: 750}}>\r\n                <p class=\"is-size-5\" >\r\n                This is a site designed to display Bruin Racing's DAQ system.\r\n                We will display information to the driver and pit crew in real time from an on-board MCU.\r\n                </p>\r\n                <hr/>\r\n                <p class=\"is-size-5\">\r\n                If you want to help out, please shoot us an email at \r\n                <a class=\"has-text-white\" href=\"mailto:ashvinagarajan@gmail.com\">ashvinagarajan@gmail.com</a>!\r\n                </p>\r\n            </div>\r\n        \r\n            <div class=\"navbar-end\">\r\n            <div class=\"navbar-item\" style={{padding:50}}>\r\n                Made by A. Nagarajan\r\n            </div>\r\n            </div>\r\n        </nav>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Footer;","\r\nimport React from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\n\r\nfunction getRandomInt (min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst getState = () => ({\r\n  labels: [\r\n    'Red',\r\n    'Green',\r\n    'Yellow'\r\n  ],\r\n  datasets: [{\r\n    data: [getRandomInt(50, 200), getRandomInt(100, 150), getRandomInt(150, 250)],\r\n    backgroundColor: [\r\n    '#FF6384',\r\n    '#36A2EB',\r\n    '#FFCE56'\r\n    ],\r\n    hoverBackgroundColor: [\r\n    '#FF6384',\r\n    '#36A2EB',\r\n    '#FFCE56'\r\n    ]\r\n  }]\r\n});\r\n\r\n\r\nclass DoughnutGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {data: getState()};\r\n    \r\n    console.log(this.props.speed);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div></div>\r\n    // <div class=\"card\" style={{padding: 50}}>\r\n    //     <div>\r\n    //         <h2>Dynamic DoughnutGraph</h2>\r\n    //     </div>\r\n\r\n    //     <div class=\"card-image\">\r\n    //         <Doughnut data={this.state.data}/>\r\n    //     </div>\r\n\r\n    //     <div class=\"card-content\">\r\n    //         <div class=\"content\">\r\n    //         This is a graph that has some information about the car. \r\n    //         <hr />\r\n    //         <time dateTime=\"2016-1-1\">11:09 PM - 1 Jan 2016</time>\r\n    //         </div>\r\n    //     </div>\r\n    // </div>\r\n\r\n    );\r\n  }\r\n};\r\n\r\nexport default DoughnutGraph;\r\n","import React from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\n\r\nconst data = {\r\n  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n  datasets: [\r\n    {\r\n      label: 'My First dataset',\r\n      fill: false,\r\n      lineTension: 0.1,\r\n      backgroundColor: 'rgba(75,192,192,0.4)',\r\n      borderColor: 'rgba(75,192,192,1)',\r\n      borderCapStyle: 'butt',\r\n      borderDash: [],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: 'miter',\r\n      pointBorderColor: 'rgba(75,192,192,1)',\r\n      pointBackgroundColor: '#fff',\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n      pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n      pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      data: [65, 59, 80, 81, 56, 55, 40]\r\n    }\r\n  ]\r\n};\r\n\r\nclass LineGraph extends React.Component{\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div></div>\r\n      // <div class=\"card\" style={{padding: 50}}>\r\n      //   <div>\r\n      //     <h2>Line Example</h2>\r\n      //   </div>\r\n\r\n      //   <div class=\"card-image\">\r\n      //     <Line data={data} />\r\n      //   </div>\r\n\r\n      //   <div class=\"card-content\">\r\n      //       <div class=\"content\">\r\n      //       This is a graph that has some information about the car. \r\n      //       <hr />\r\n      //       <time dateTime=\"2016-1-1\">11:09 PM - 1 Jan 2016</time>\r\n      //       </div>\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default LineGraph;","import React from 'react';\r\nimport {Pie} from 'react-chartjs-2';\r\n\r\nconst data = {\r\n\tlabels: [\r\n\t\t'Red',\r\n\t\t'Green',\r\n\t\t'Yellow'\r\n\t],\r\n\tdatasets: [{\r\n\t\tdata: [300, 50, 100],\r\n\t\tbackgroundColor: [\r\n\t\t'#FF6384',\r\n\t\t'#36A2EB',\r\n\t\t'#FFCE56'\r\n\t\t],\r\n\t\thoverBackgroundColor: [\r\n\t\t'#FF6384',\r\n\t\t'#36A2EB',\r\n\t\t'#FFCE56'\r\n\t\t]\r\n\t}]\r\n};\r\n\r\nclass PieGraph extends React.Component{\r\n\r\n  render() {\r\n    return (\r\n              \r\n      <div></div>\r\n        // <div class=\"card\" style={{padding: 50}}>\r\n        //     <div>\r\n        //         <h2>Pie Example</h2>\r\n        //     </div>\r\n\r\n        //     <div class=\"card-image\">\r\n        //         <Pie data={data} />\r\n        //     </div>\r\n\r\n        //     <div class=\"card-content\">\r\n        //         <div class=\"content\">\r\n        //         This is a graph that has some information about the car. \r\n        //         <hr />\r\n        //         <time dateTime=\"2016-1-1\">11:09 PM - 1 Jan 2016</time>\r\n        //         </div>\r\n        //     </div>\r\n        // </div>\r\n        \r\n    );\r\n  }\r\n};\r\n\r\nexport default PieGraph;","import React from 'react';\r\nimport firebase from './firebase.js'\r\nimport './App.css';\r\n\r\n// HERE IS THE WEBSITE IM USING FOR THE GRAPH EXAMPLES SUPER HELPFUL\r\n// https://github.com/jerairrest/react-chartjs-2/blob/master/example/src/components/line.js\r\n// http://jerairrest.github.io/react-chartjs-2/\r\n\r\nimport Header from './header';\r\nimport Footer from './footer';\r\n\r\nimport DoughnutGraph from './doughnut';\r\nimport PieGraph from './pie';\r\nimport LineGraph from './line';\r\n\r\nclass App extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      speed: [],\r\n      gps: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let database = firebase.database();\r\n\r\n    database.ref('speed').on('value', (snapshot) => {\r\n      let speedObj = snapshot.val();\r\n      var speedArr = [];\r\n      for(let speeds in speedObj){\r\n        speedArr.push(speedObj[speeds]);\r\n      }\r\n      this.setState({\r\n        speed: speedArr\r\n      });\r\n    });\r\n\r\n    database.ref('gps').on('value', (snapshot) => {\r\n      let gpsObj = snapshot.val();\r\n      var gpsArr = [];\r\n      for(let gps in gpsObj){\r\n        gpsArr.push(gpsObj[gps]);\r\n      }\r\n      this.setState({\r\n        gps: gpsArr\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{paddingTop: 100}}>\r\n        <Header/>\r\n        <div>\r\n          {this.state.speed}\r\n          <br/>\r\n          {this.state.gps[0]} \r\n          <br/>\r\n        </div>\r\n        {/* <div class=\"columns\">\r\n          <div class=\"column\">\r\n            <DoughnutGraph speed={this.state.speed} /> */}\r\n            \r\n            <LineGraph />\r\n          {/* </div>\r\n          <div class=\"column\">\r\n            <PieGraph />\r\n            \r\n            <PieGraph />\r\n          </div>\r\n        </div> */}\r\n  \r\n  \r\n        <Footer />\r\n  \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}